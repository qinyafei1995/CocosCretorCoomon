{"version":3,"sources":["ListItem.js"],"names":["SelectedType","cc","Enum","NONE","TOGGLE","SWITCH","Class","editor","disallowMultiple","menu","executionOrder","extends","Component","properties","icon","default","type","Sprite","title","Node","selectedMode","tooltip","CC_DEV","selectedFlag","visible","bool","selectedSpriteFrame","SpriteFrame","adaptiveSize","_selected","selected","get","set","val","active","spriteFrame","_unselectedSpriteFrame","_btnCom","btnCom","node","getComponent","Button","onLoad","com","Label","RichText","onDestroy","t","off","EventType","SIZE_CHANGED","_onSizeChange","_registerEvent","eventReg","_list","clickEvents","unshift","createEvt","on","_onItemAdaptive","component","handlerName","isValid","comName","name","match","pop","replace","evt","EventHandler","target","handler","showAni","aniType","callFunc","del","acts","scaleTo","moveBy","height","width","push","CallFunc","_delSingleItem","n","displayData","length","listId","_listId","splice","runAction","Sequence","onClickThis","selectedId"],"mappings":"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","file":"ListItem.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["/******************************************\n * @author kL <klk0@qq.com>\n * @date 2019/5/15\n * @doc 列表Item组件.\n * 说明：\n *      1、此组件须配合List组件使用。（配套的配套的..）\n * @end\n ******************************************/\nconst SelectedType = cc.Enum({\n    NONE: 0,\n    TOGGLE: 1, //单一（单个Node显示/隐藏）\n    SWITCH: 2, //切换(单个Sprite切换SpriteFrame)\n});\n\ncc.Class({\n    editor: {\n        disallowMultiple: false,\n        menu: '自定义组件/List Item',\n        executionOrder: -5001,          //先于List\n    },\n\n    extends: cc.Component,\n\n    properties: {\n        icon: {\n            default: null,\n            type: cc.Sprite,\n        },\n        title: cc.Node,\n        selectedMode: {\n            default: SelectedType.NONE,\n            type: SelectedType,\n            tooltip: CC_DEV && '选择模式',\n            // get: function () {\n            //     return this._slideType;\n            // },\n            // set: function (val) {\n            //     if (val != null)\n            //         this._slideType = val;\n            // }\n        },\n        selectedFlag: {\n            default: null,\n            type: cc.Node,\n            visible: function () {\n                let bool = this.selectedMode > 0;\n                if (!bool)\n                    this.selectedFlag = null;\n                return bool;\n            },\n        },\n        selectedSpriteFrame: {\n            default: null,\n            type: cc.SpriteFrame,\n            visible: function () {\n                let bool = this.selectedMode == SelectedType.SWITCH;\n                if (!bool)\n                    this.selectedSpriteFrame = null;\n                return bool;\n            },\n        },\n        adaptiveSize: {\n            default: false,\n            tooltip: CC_DEV && '自适应尺寸（宽或高）',\n        },\n        _selected: false,\n        selected: {\n            visible: false,\n            get() {\n                return this._selected;\n            },\n            set(val) {\n                this._selected = val;\n                if (!this.selectedFlag)\n                    return;\n                switch (this.selectedMode) {\n                    case SelectedType.TOGGLE:\n                        this.selectedFlag.active = val;\n                        break;\n                    case SelectedType.SWITCH:\n                        // this.selectedFlag.node.active = true;\n                        this.selectedFlag.spriteFrame = val ? this.selectedSpriteFrame : this._unselectedSpriteFrame;\n                        break;\n                }\n            }\n        },\n        _btnCom: null,\n        btnCom: {\n            visible: false,\n            get: function () {\n                if (!this._btnCom)\n                    this._btnCom = this.node.getComponent(cc.Button);\n                return this._btnCom;\n            }\n        },\n    },\n\n    onLoad() {\n        //强行把文字组件转换给title...方便使用\n        if (this.title) {\n            let com = this.title.getComponent(cc.Label);\n            if (!com)\n                com = this.title.getComponent(cc.RichText);\n            this.title = com;\n        }\n        //没有按钮组件的话，selectedFlag无效\n        if (!this.btnCom)\n            this.selectedMode == SelectedType.NONE;\n        //有选择模式时，保存相应的东西\n        if (this.selectedMode == SelectedType.SWITCH) {\n            let com = this.selectedFlag.getComponent(cc.Sprite);\n            // if (!com)\n            //     cc.error('SelectedMode为\"SWITCH\"时，selectedFlag必须要有cc.Sprite组件！');\n            this.selectedFlag = com;\n            this._unselectedSpriteFrame = com.spriteFrame;\n        }\n    },\n\n    onDestroy() {\n        let t = this;\n        t.node.off(cc.Node.EventType.SIZE_CHANGED, t._onSizeChange, t);\n    },\n\n    _registerEvent() {\n        let t = this;\n        if (!t.eventReg) {\n            if (t.btnCom && t._list.selectedMode > 0) {\n                t.btnCom.clickEvents.unshift(t.createEvt(t, 'onClickThis'));\n            }\n            if (t.adaptiveSize) {\n                t.node.on(cc.Node.EventType.SIZE_CHANGED, t._onSizeChange, t);\n            }\n            t.eventReg = true;\n        }\n    },\n\n    _onSizeChange() {\n        this._list._onItemAdaptive(this.node);\n    },\n    /**\n     * 创建事件\n     * @param {cc.Component} component 组件脚本\n     * @param {string} handlerName 触发函数名称\n     * @param {cc.Node} node 组件所在node（不传的情况下取component.node）\n     * @returns cc.Component.EventHandler\n     */\n    createEvt(component, handlerName, node) {\n        if (!component.isValid)\n            return;//有些异步加载的，节点以及销毁了。\n        component.comName = component.comName || component.name.match(/\\<(.*?)\\>/g).pop().replace(/\\<|>/g, '');\n        let evt = new cc.Component.EventHandler();\n        evt.target = node || component.node;\n        evt.component = component.comName;\n        evt.handler = handlerName;\n        return evt;\n    },\n\n    showAni(aniType, callFunc, del) {\n        let acts;\n        switch (aniType) {\n            case 0: //向上消失\n                acts = [\n                    new cc.scaleTo(.2, .7),\n                    new cc.moveBy(.3, 0, this.node.height * 2),\n                ];\n                break;\n            case 1: //向右消失\n                acts = [\n                    new cc.scaleTo(.2, .7),\n                    new cc.moveBy(.3, this.node.width * 2, 0),\n                ];\n                break;\n            case 2: //向下消失\n                acts = [\n                    new cc.scaleTo(.2, .7),\n                    new cc.moveBy(.3, 0, this.node.height * -2),\n                ];\n                break;\n            case 3: //向左消失\n                acts = [\n                    new cc.scaleTo(.2, .7),\n                    new cc.moveBy(.3, this.node.width * -2, 0),\n                ];\n                break;\n            default: //默认：缩小消失\n                acts = [\n                    new cc.scaleTo(.3, .1),\n                ];\n                break;\n        }\n        if (callFunc || del) {\n            acts.push(new cc.CallFunc(() => {\n                if (del) {\n                    this._list._delSingleItem(this.node);\n                    for (let n = this._list.displayData.length - 1; n >= 0; n--) {\n                        if (this._list.displayData[n].listId == this.node._listId) {\n                            this._list.displayData.splice(n, 1);\n                            break;\n                        }\n                    }\n                }\n                callFunc();\n            }));\n        }\n        this.node.runAction(new cc.Sequence(acts));\n    },\n\n    onClickThis() {\n        // if (this._list.selectedMode == 1)\n        this._list.selectedId = this.node._listId;\n    },\n\n});"]}