{"version":3,"sources":["List.js"],"names":["TemplateType","cc","Enum","SlideType","SelectedType","ListItem","require","Class","extends","Component","editor","disallowMultiple","menu","requireComponent","ScrollView","executionOrder","properties","templateType","default","NODE","type","tmpNode","Node","tooltip","CC_DEV","visible","bool","tmpPrefab","Prefab","PREFAB","_slideMode","slideMode","get","set","val","pageDistance","Float","range","slide","PAGE","pageChangeEvent","EventHandler","_virtual","virtual","_numItems","_onScrolling","cyclic","NORMAL","lackCenter","lackSlide","_updateRate","updateRate","Integer","frameByFrameRenderNum","renderEvent","selectedMode","NONE","repeatEventSingle","SINGLE","selectedEvent","_selectedId","selectedId","t","item","getItemByListId","_lastSelectedId","listItem","selected","lastItem","emitEvents","_actualNumItems","MULT","sub","multSelected","indexOf","push","splice","serializable","numItems","checkInited","error","_forceUpdate","_resizeContent","_cyclicNum","curPageNum","nearestListId","layout","content","getComponent","Layout","enabled","_delRedundantItem","firstListId","len","n","_createOrUpdateItem2","_updateCounter","_updateDone","displayItemNum","onLoad","_init","onDestroy","_itemTmp","isValid","destroy","_pool","size","node","onEnable","_registerEvent","onDisable","_unregisterEvent","on","EventType","TOUCH_START","_onTouchStart","_onTouchUp","TOUCH_CANCEL","_onTouchCancelled","_onScrollBegan","_onScrollEnded","SIZE_CHANGED","_onSizeChanged","off","_inited","_scrollView","name","_layout","_align","_resizeMode","resizeMode","_startAxis","startAxis","_topGap","paddingTop","_rightGap","paddingRight","_bottomGap","paddingBottom","_leftGap","paddingLeft","_columnGap","spacingX","_lineGap","spacingY","_colLineNum","_verticalDir","verticalDirection","_horizontalDir","horizontalDirection","setTemplateItem","instantiate","ADHERING","inertia","_lastDisplayData","displayData","NodePool","_processAutoScrolling","bind","_startBounceBackIfNeeded","Type","HORIZONTAL","HorizontalDirection","LEFT_TO_RIGHT","_alignCalcType","RIGHT_TO_LEFT","VERTICAL","VerticalDirection","TOP_TO_BOTTOM","BOTTOM_TO_TOP","GRID","AxisDirection","children","forEach","child","removeFromParent","dt","brakingFactor","_autoScrollAccumulatedTime","percentage","Math","min","_autoScrollTotalTime","_autoScrollAttenuate","time","newPosition","_autoScrollStartPosition","add","_autoScrollTargetDelta","mul","EPSILON","getScrollEndedEventTiming","reachedEnd","abs","fireEvent","_isScrollEndedWithThresholdEventFired","_dispatchEvent","_autoScrolling","deltaMove","getContentPosition","_moveContent","_clampDelta","_isBouncing","_scrolling","ResizeMode","CHILDREN","_itemSize","cellSize","width","height","com","remove","_btnCom","Button","Widget","_needUpdateWidget","_sizeType","trimW","floor","trimH","printLog","result","_customSize","fixed","_getFixedSize","count","lineNum","ceil","colNum","_allItemSize","_allItemSizeNoEdge","totalSize","_cyclicPos1","spacing","_cyclicPos2","_cyclicAllItemSize","_cycilcAllItemSizeNoEdge","_lack","slideOffset","targetWH","ev","frameCount","_aniDelRuning","scrollPos","getPosition","y","x","addVal","v2","isAutoScrolling","_calcViewPos","vTop","vRight","vBottom","vLeft","viewTop","viewBottom","console","log","viewRight","viewLeft","itemPos","curId","endId","breakFor","_calcItemPos","right","left","length","bottom","top","ww","hh","id","_doneAfterUpdate","c","_createOrUpdateItem","_calcNearestItem","elasticLeft","elasticRight","elasticTop","elasticBottom","itemX","itemY","cs","offset","anchorX","anchorY","colLine","_calcExistItemPos","data","getItemPos","listId","parseInt","_beganPos","scrollToListId","runAction","sequence","scaleTo","adhering","adhere","_pageAdhere","captureListeners","_hasNestedViewGroup","isMe","eventPhase","Event","AT_TARGET","target","itemNode","_listId","parent","_scrollItem","_scrollPos","_adheringBarrier","simulate","_onItemAdaptive","_updateItemPos","isNaN","_scrollToListId","unschedule","_scrollToSo","scrollTo","max","_scrollToEndTime","Date","getTime","curPos","dis","canSkip","timeInSecond","prePage","nextPage","update","isScrolling","canGet","setContentSize","setPosition","_resetItemSize","addChild","widget","updateAlignment","setSiblingIndex","childrenCount","_list","_updateListItem","listIdOrItem","pos","setMultSelected","args","Array","isArray","updateItem","updateAll","_getOutsideItem","isOutside","arr","put","_delSingleItem","aniDelItem","callFunc","aniType","warn","curLastId","resetSelectedId","showAni","newId","newData","newCustomSize","sec","acts","haveCB","posData","moveTo","CallFunc","Sequence","overStress","stopAutoScroll","updateLayout","targetX","targetY","viewPos","comparePos","runScroll","scrollToOffset","scheduleOnce","center","skipPage","pageNum","calcCustomSize","temp","Object","keys"],"mappings":"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","file":"List.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["/******************************************\n * @author kL <klk0@qq.com>\n * @date 2019/1/5\n * @doc 列表组件.\n * @end\n ******************************************/\nconst TemplateType = cc.Enum({\n    'NODE': 1,\n    'PREFAB': 2,\n});\nconst SlideType = cc.Enum({\n    'NORMAL': 1, //普通\n    'ADHERING': 2, //粘附模式，将强制关闭滚动惯性\n    'PAGE': 3,   //页面模式，将强制关闭滚动惯性\n});\nconst SelectedType = cc.Enum({\n    'NONE': 0,\n    'SINGLE': 1, //单选\n    'MULT': 2, //多选\n});\n\nconst ListItem = require('ListItem');\n\ncc.Class({\n    extends: cc.Component,\n\n    editor: {\n        disallowMultiple: false,\n        menu: '自定义组件/List',\n        requireComponent: cc.ScrollView,\n        //脚本生命周期回调的执行优先级。小于 0 的脚本将优先执行，大于 0 的脚本将最后执行。该优先级只对 onLoad, onEnable, start, update 和 lateUpdate 有效，对 onDisable 和 onDestroy 无效。\n        executionOrder: -5000,\n    },\n\n    properties: {\n        templateType: {\n            default: TemplateType.NODE,\n            type: TemplateType,\n        },\n        tmpNode: {\n            default: null,\n            type: cc.Node,\n            tooltip: CC_DEV && 'Item模版，type:cc.Node',\n            visible: function () {\n                let bool = this.templateType == TemplateType.NODE;\n                if (!bool)\n                    this.tmpNode = null;\n                return bool;\n            }\n        },\n        tmpPrefab: {\n            default: null,\n            type: cc.Prefab,\n            tooltip: CC_DEV && 'Item模版，type:cc.Prefab',\n            visible: function () {\n                let bool = this.templateType == TemplateType.PREFAB;\n                if (!bool)\n                    this.tmpPrefab = null;\n                return bool;\n            }\n        },\n        _slideMode: 1,\n        slideMode: {\n            type: SlideType,\n            tooltip: CC_DEV && '滑动模式',\n            get: function () {\n                return this._slideMode;\n            },\n            set: function (val) {\n                if (val != null)\n                    this._slideMode = val;\n            }\n        },\n        pageDistance: {\n            default: .3,\n            type: cc.Float,\n            range: [0, 1, .1],\n            tooltip: CC_DEV && '翻页作用距离',\n            slide: true,\n            visible: function () {\n                return this._slideMode == SlideType.PAGE;\n            },\n        },\n        pageChangeEvent: {\n            default: null,\n            type: cc.Component.EventHandler,\n            tooltip: CC_DEV && '页面改变事件',\n            visible: function () {\n                let bool = this._slideMode == SlideType.PAGE;\n                if (!bool)\n                    this.pageChangeEvent = null;\n                return bool;\n            },\n        },\n        _virtual: true,\n        virtual: {\n            tooltip: CC_DEV && '是否为虚拟列表（动态列表）',\n            get() {\n                return this._virtual;\n            },\n            set(val) {\n                if (val != null)\n                    this._virtual = val;\n                if (!CC_DEV && this._numItems != 0) {\n                    this._onScrolling();\n                }\n            }\n        },\n        cyclic: {\n            default: false,\n            tooltip: CC_DEV && '是否为循环列表',\n            visible: function () {\n                let val = this.virtual && this.slideMode == SlideType.NORMAL;\n                if (!val)\n                    this.cyclic = false;\n                return val;\n            },\n        },\n        lackCenter: {\n            default: false,\n            tooltip: CC_DEV && 'Item数量不足以填满Content时，是否居中显示Item（不支持Grid布局）',\n            visible: function () {\n                return this.virtual;\n            }\n        },\n        lackSlide: {\n            default: false,\n            tooltip: CC_DEV && 'Item数量不足以填满Content时，是否可滑动',\n            visible: function () {\n                let val = this.virtual && !this.lackCenter;\n                if (!val)\n                    this.lackSlide = false;\n                return val;\n            }\n        },\n        _updateRate: 0,\n        updateRate: {\n            type: cc.Integer,\n            range: [0, 6, 1],\n            tooltip: CC_DEV && '刷新频率（值越大刷新频率越低、性能越高）',\n            slide: true,\n            get() {\n                return this._updateRate;\n            },\n            set(val) {\n                if (val >= 0 && val <= 6) {\n                    this._updateRate = val;\n                }\n            }\n        },\n        frameByFrameRenderNum: {\n            default: 0,\n            type: cc.Integer,\n            range: [0, 12, 1],\n            tooltip: CC_DEV && '逐帧渲染时，每帧渲染的Item数量（<=0时关闭分帧渲染）',\n            slide: true,\n        },\n        renderEvent: {\n            default: null,\n            type: cc.Component.EventHandler,\n            tooltip: CC_DEV && '渲染事件（渲染器）',\n        },\n        selectedMode: {\n            default: SelectedType.NONE,\n            type: SelectedType,\n            tooltip: CC_DEV && '选择模式',\n        },\n        repeatEventSingle: {\n            default: false,\n            tooltip: CC_DEV && '是否重复响应单选事件',\n            visible: function () {\n                return this.selectedMode == SelectedType.SINGLE;\n            }\n        },\n        selectedEvent: {\n            default: null,\n            type: cc.Component.EventHandler,\n            tooltip: CC_DEV && '触发选择事件',\n            visible: function () {\n                let bool = this.selectedMode > 0;\n                if (!bool)\n                    this.selectedEvent = null;\n                return bool;\n            },\n        },\n        _selectedId: -1,\n        selectedId: {\n            visible: false,\n            get: function () {\n                return this._selectedId;\n            },\n            set: function (val) {\n                let t = this;\n                let item;\n                switch (t.selectedMode) {\n                    case SelectedType.SINGLE: {\n                        if (!t.repeatEventSingle && val == t._selectedId)\n                            return;\n                        item = t.getItemByListId(val);\n                        // if (!item && val >= 0)\n                        //     return;\n                        if (t._selectedId >= 0)\n                            t._lastSelectedId = t._selectedId;\n                        else //如果＜0则取消选择，把_lastSelectedId也置空吧，如果以后有特殊需求再改吧。\n                            t._lastSelectedId = null;\n                        t._selectedId = val;\n                        if (item)\n                            item.listItem.selected = true;\n                        if (t._lastSelectedId >= 0 && t._lastSelectedId != t._selectedId) {\n                            let lastItem = t.getItemByListId(t._lastSelectedId);\n                            if (lastItem) {\n                                lastItem.listItem.selected = false;\n                            }\n                        }\n                        if (t.selectedEvent) {\n                            cc.Component.EventHandler.emitEvents([t.selectedEvent], item, val % this._actualNumItems, t._lastSelectedId % this._actualNumItems);\n                        }\n                        break;\n                    }\n                    case SelectedType.MULT: {\n                        item = t.getItemByListId(val);\n                        if (!item)\n                            return;\n                        if (t._selectedId >= 0)\n                            t._lastSelectedId = t._selectedId;\n                        t._selectedId = val;\n                        let bool = !item.listItem.selected;\n                        item.listItem.selected = bool;\n                        let sub = t.multSelected.indexOf(val);\n                        if (bool && sub < 0) {\n                            t.multSelected.push(val);\n                        } else if (!bool && sub >= 0) {\n                            t.multSelected.splice(sub, 1);\n                        }\n                        if (t.selectedEvent) {\n                            cc.Component.EventHandler.emitEvents([t.selectedEvent], item, val % this._actualNumItems, t._lastSelectedId % this._actualNumItems, bool);\n                        }\n                        break;\n                    }\n                }\n            },\n        },\n        _numItems: {\n            default: 0,\n            serializable: false,\n        },\n        numItems: {\n            visible: false,\n            get() {\n                return this._actualNumItems;\n            },\n            set(val) {\n                let t = this;\n                if (!t.checkInited())\n                    return;\n                if (val == null || val < 0) {\n                    cc.error('numItems set the wrong::', val);\n                    return;\n                }\n                t._actualNumItems = t._numItems = val;\n                t._forceUpdate = true;\n\n                if (t._virtual) {\n                    t._resizeContent();\n                    if (t.cyclic) {\n                        t._numItems = t._cyclicNum * t._numItems;\n                    }\n                    t._onScrolling();\n                    if (!t.frameByFrameRenderNum && t.slideMode == SlideType.PAGE)\n                        t.curPageNum = t.nearestListId;\n                } else {\n                    let layout = t.content.getComponent(cc.Layout);\n                    if (layout) {\n                        layout.enabled = true;\n                    }\n                    t._delRedundantItem();\n\n                    t.firstListId = 0;\n                    if (t.frameByFrameRenderNum > 0) {\n                        //先渲染几个出来\n                        let len = t.frameByFrameRenderNum > t._numItems ? t._numItems : t.frameByFrameRenderNum;\n                        for (let n = 0; n < len; n++) {\n                            t._createOrUpdateItem2(n);\n                        }\n                        if (t.frameByFrameRenderNum < t._numItems) {\n                            t._updateCounter = t.frameByFrameRenderNum;\n                            t._updateDone = false;\n                        }\n                    } else {\n                        for (let n = 0; n < val; n++) {\n                            t._createOrUpdateItem2(n);\n                        }\n                        t.displayItemNum = val;\n                    }\n                }\n            }\n        },\n    },\n\n    onLoad() {\n        this._init();\n    },\n\n    onDestroy() {\n        if (this._itemTmp && this._itemTmp.isValid)\n            this._itemTmp.destroy();\n        // let total = this._pool.size();\n        while (this._pool.size()) {\n            let node = this._pool.get();\n            node.destroy();\n        }\n        // if (total)\n        //     cc.log('-----------------' + this.node.name + '<List> destroy node total num. =>', total);\n    },\n\n    onEnable() {\n        // if (!CC_EDITOR)\n        this._registerEvent();\n        this._init();\n    },\n\n    onDisable() {\n        // if (!CC_EDITOR)\n        this._unregisterEvent();\n    },\n    //注册事件\n    _registerEvent() {\n        let t = this;\n        t.node.on(cc.Node.EventType.TOUCH_START, t._onTouchStart, t, true);\n        t.node.on('touch-up', t._onTouchUp, t, true);\n        t.node.on(cc.Node.EventType.TOUCH_CANCEL, t._onTouchCancelled, t, true);\n        t.node.on('scroll-began', t._onScrollBegan, t, true);\n        t.node.on('scroll-ended', t._onScrollEnded, t, true);\n        t.node.on('scrolling', t._onScrolling, t, true);\n        t.node.on(cc.Node.EventType.SIZE_CHANGED, t._onSizeChanged, t);\n    },\n    //卸载事件\n    _unregisterEvent() {\n        let t = this;\n        t.node.off(cc.Node.EventType.TOUCH_START, t._onTouchStart, t, true);\n        t.node.off('touch-up', t._onTouchUp, t, true);\n        t.node.off(cc.Node.EventType.TOUCH_CANCEL, t._onTouchCancelled, t, true);\n        t.node.off('scroll-began', t._onScrollBegan, t, true);\n        t.node.off('scroll-ended', t._onScrollEnded, t, true);\n        t.node.off('scrolling', t._onScrolling, t, true);\n        t.node.off(cc.Node.EventType.SIZE_CHANGED, t._onSizeChanged, t);\n    },\n    //初始化各种..\n    _init() {\n        let t = this;\n        if (t._inited)\n            return;\n\n        t._scrollView = t.node.getComponent(cc.ScrollView);\n\n        t.content = t._scrollView.content;\n        if (!t.content) {\n            cc.error(t.node.name + \"'s cc.ScrollView unset content!\");\n            return;\n        }\n\n        t._layout = t.content.getComponent(cc.Layout);\n        \n\n        t._align = t._layout.type; //排列模式\n        t._resizeMode = t._layout.resizeMode; //自适应模式\n        t._startAxis = t._layout.startAxis;\n\n        t._topGap = t._layout.paddingTop;       //顶边距\n        t._rightGap = t._layout.paddingRight;   //右边距\n        t._bottomGap = t._layout.paddingBottom; //底边距\n        t._leftGap = t._layout.paddingLeft;     //左边距\n\n        t._columnGap = t._layout.spacingX;      //列距\n        t._lineGap = t._layout.spacingY;        //行距\n\n        // console.log('顶边距---->', t._topGap, '右边距---->', t._rightGap, '底边距---->', t._bottomGap, '左边距---->', t._leftGap, '列距---->', t._columnGap, '行距---->', t._lineGap);\n\n        t._colLineNum; //列数或行数（非GRID模式则=1，表示单列或单行）;\n\n        t._verticalDir = t._layout.verticalDirection; //垂直排列子节点的方向\n        t._horizontalDir = t._layout.horizontalDirection; //水平排列子节点的方向\n\n        t.setTemplateItem(cc.instantiate(t.templateType == TemplateType.PREFAB ? t.tmpPrefab : t.tmpNode));\n\n        if (t._slideMode == SlideType.ADHERING || t._slideMode == SlideType.PAGE)//特定的滑动模式需要关闭惯性\n            t._scrollView.inertia = false;\n        if (!t.virtual)         // lackCenter 仅支持 Virtual 模式\n            t.lackCenter = false;\n\n        t._lastDisplayData = [];//最后一次刷新的数据\n        t.displayData = [];     //当前数据\n        t._pool = new cc.NodePool();    //这是个池子..\n        t._forceUpdate = false; //是否强制更新\n        t._updateCounter = 0;   //当前分帧渲染帧数\n        t._updateDone = true;   //分帧渲染是否完成\n\n        t.curPageNum = 0;   //当前页数\n\n        if (t.cyclic) { // 如果是循环列表，覆写一些cc.ScrollView的函数\n            t._scrollView._processAutoScrolling = this._processAutoScrolling.bind(t);\n            t._scrollView._startBounceBackIfNeeded = function () {\n                return false;\n            }\n            // t._scrollView._scrollChildren = function () {\n            //     return false;\n            // }\n        }\n\n        switch (t._align) {\n            case cc.Layout.Type.HORIZONTAL: {\n                switch (t._horizontalDir) {\n                    case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:\n                        t._alignCalcType = 1;\n                        break;\n                    case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:\n                        t._alignCalcType = 2;\n                        break;\n                }\n                break;\n            }\n            case cc.Layout.Type.VERTICAL: {\n                switch (t._verticalDir) {\n                    case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:\n                        t._alignCalcType = 3;\n                        break;\n                    case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:\n                        t._alignCalcType = 4;\n                        break;\n                }\n                break;\n            }\n            case cc.Layout.Type.GRID: {\n                switch (t._startAxis) {\n                    case cc.Layout.AxisDirection.HORIZONTAL:\n                        switch (t._verticalDir) {\n                            case cc.Layout.VerticalDirection.TOP_TO_BOTTOM:\n                                t._alignCalcType = 3;\n                                break;\n                            case cc.Layout.VerticalDirection.BOTTOM_TO_TOP:\n                                t._alignCalcType = 4;\n                                break;\n                        }\n                        break;\n                    case cc.Layout.AxisDirection.VERTICAL:\n                        switch (t._horizontalDir) {\n                            case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT:\n                                t._alignCalcType = 1;\n                                break;\n                            case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT:\n                                t._alignCalcType = 2;\n                                break;\n                        }\n                        break;\n                }\n                break;\n            }\n        }\n        // 清空 content\n        t.content.children.forEach(child => {\n            child.removeFromParent();\n            if (child.isValid)\n                child.destroy();\n        });\n        t._inited = true;\n    },\n    /**\n     * 为了实现循环列表，必须覆写cc.ScrollView的某些函数\n     * @param {Number} dt\n     */\n    _processAutoScrolling(dt) {\n        // let isAutoScrollBrake = this._scrollView._isNecessaryAutoScrollBrake();\n        let brakingFactor = 1;\n        this._scrollView._autoScrollAccumulatedTime += dt * (1 / brakingFactor);\n        // console.log('??????', dt);\n        let percentage = Math.min(1, this._scrollView._autoScrollAccumulatedTime / this._scrollView._autoScrollTotalTime);\n        if (this._scrollView._autoScrollAttenuate) {\n            let time = percentage - 1;\n            percentage = time * time * time * time * time + 1;\n        }\n\n        let newPosition = this._scrollView._autoScrollStartPosition.add(this._scrollView._autoScrollTargetDelta.mul(percentage));\n        let EPSILON = this._scrollView.getScrollEndedEventTiming();\n        let reachedEnd = Math.abs(percentage - 1) <= EPSILON;\n        // cc.log(reachedEnd, Math.abs(percentage - 1), EPSILON)\n\n        let fireEvent = Math.abs(percentage - 1) <= this._scrollView.getScrollEndedEventTiming();\n        if (fireEvent && !this._scrollView._isScrollEndedWithThresholdEventFired) {\n            this._scrollView._dispatchEvent('scroll-ended-with-threshold');\n            this._scrollView._isScrollEndedWithThresholdEventFired = true;\n        }\n\n        // if (this._scrollView.elastic && !reachedEnd) {\n        //     let brakeOffsetPosition = newPosition.sub(this._scrollView._autoScrollBrakingStartPosition);\n        //     if (isAutoScrollBrake) {\n        //         brakeOffsetPosition = brakeOffsetPosition.mul(brakingFactor);\n        //     }\n        //     newPosition = this._scrollView._autoScrollBrakingStartPosition.add(brakeOffsetPosition);\n        // } else {\n        //     let moveDelta = newPosition.sub(this._scrollView.getContentPosition());\n        //     let outOfBoundary = this._scrollView._getHowMuchOutOfBoundary(moveDelta);\n        //     if (!outOfBoundary.fuzzyEquals(cc.v2(0, 0), EPSILON)) {\n        //         newPosition = newPosition.add(outOfBoundary);\n        //         reachedEnd = true;\n        //     }\n        // }\n\n        if (reachedEnd) {\n            this._scrollView._autoScrolling = false;\n        }\n\n        let deltaMove = newPosition.sub(this._scrollView.getContentPosition());\n        // cc.log(deltaMove)\n        this._scrollView._moveContent(this._scrollView._clampDelta(deltaMove), reachedEnd);\n        this._scrollView._dispatchEvent('scrolling');\n\n        // scollTo API controll move\n        if (!this._scrollView._autoScrolling) {\n            this._scrollView._isBouncing = false;\n            this._scrollView._scrolling = false;\n            this._scrollView._dispatchEvent('scroll-ended');\n        }\n    },\n    //设置模板Item\n    setTemplateItem(item) {\n        if (!item)\n            return;\n        let t = this;\n        t._itemTmp = item;\n\n        if (t._resizeMode == cc.Layout.ResizeMode.CHILDREN)\n            t._itemSize = t._layout.cellSize;\n        else\n            t._itemSize = new cc.size(item.width, item.height);\n\n        //获取ListItem，如果没有就取消选择模式\n        let com = item.getComponent(ListItem);\n        let remove = false;\n        if (!com)\n            remove = true;\n        if (com) {\n            if (!com._btnCom && !item.getComponent(cc.Button)) {\n                remove = true;\n            }\n        }\n        if (remove) {\n            t.selectedMode = SelectedType.NONE;\n        }\n        com = item.getComponent(cc.Widget);\n        if (com && com.enabled) {\n            t._needUpdateWidget = true;\n        }\n        if (t.selectedMode == SelectedType.MULT)\n            t.multSelected = [];\n\n        switch (t._align) {\n            case cc.Layout.Type.HORIZONTAL:\n                t._colLineNum = 1;\n                t._sizeType = false;\n                break;\n            case cc.Layout.Type.VERTICAL:\n                t._colLineNum = 1;\n                t._sizeType = true;\n                break;\n            case cc.Layout.Type.GRID:\n                switch (t._startAxis) {\n                    case cc.Layout.AxisDirection.HORIZONTAL:\n                        //计算列数\n                        let trimW = t.content.width - t._leftGap - t._rightGap;\n                        t._colLineNum = Math.floor((trimW + t._columnGap) / (t._itemSize.width + t._columnGap));\n                        t._sizeType = true;\n                        break;\n                    case cc.Layout.AxisDirection.VERTICAL:\n                        //计算行数\n                        let trimH = t.content.height - t._topGap - t._bottomGap;\n                        t._colLineNum = Math.floor((trimH + t._lineGap) / (t._itemSize.height + t._lineGap));\n                        t._sizeType = false;\n                        break;\n                }\n                break;\n        }\n    },\n    /**\n     * 检查是否初始化\n     * @param {Boolean} printLog 是否打印错误信息\n     * @returns\n     */\n    checkInited(printLog) {\n        printLog = printLog == null ? true : printLog;\n        if (!this._inited) {\n            if (printLog) {\n                cc.error('List initialization not completed!');\n            }\n            return false;\n        }\n        return true;\n    },\n    //禁用 Layout 组件，自行计算 Content Size\n    _resizeContent() {\n        let t = this;\n        let result;\n        switch (t._align) {\n            case cc.Layout.Type.HORIZONTAL: {\n                if (t._customSize) {\n                    let fixed = t._getFixedSize();\n                    result = t._leftGap + fixed.val + (t._itemSize.width * (t._numItems - fixed.count)) + (t._columnGap * (t._numItems - 1)) + t._rightGap;\n                } else {\n                    result = t._leftGap + (t._itemSize.width * t._numItems) + (t._columnGap * (t._numItems - 1)) + t._rightGap;\n                }\n                break;\n            }\n            case cc.Layout.Type.VERTICAL: {\n                if (t._customSize) {\n                    let fixed = t._getFixedSize();\n                    result = t._topGap + fixed.val + (t._itemSize.height * (t._numItems - fixed.count)) + (t._lineGap * (t._numItems - 1)) + t._bottomGap;\n                } else {\n                    result = t._topGap + (t._itemSize.height * t._numItems) + (t._lineGap * (t._numItems - 1)) + t._bottomGap;\n                }\n                break;\n            }\n            case cc.Layout.Type.GRID: {\n                //网格模式不支持居中\n                if (t.lackCenter)\n                    t.lackCenter = false;\n                switch (t._startAxis) {\n                    case cc.Layout.AxisDirection.HORIZONTAL:\n                        let lineNum = Math.ceil(t._numItems / t._colLineNum);\n                        result = t._topGap + (t._itemSize.height * lineNum) + (t._lineGap * (lineNum - 1)) + t._bottomGap;\n                        break;\n                    case cc.Layout.AxisDirection.VERTICAL:\n                        let colNum = Math.ceil(t._numItems / t._colLineNum);\n                        result = t._leftGap + (t._itemSize.width * colNum) + (t._columnGap * (colNum - 1)) + t._rightGap;\n                        break;\n                }\n                break;\n            }\n        }\n\n        let layout = t.content.getComponent(cc.Layout);\n        if (layout)\n            layout.enabled = false;\n\n        t._allItemSize = result;\n        t._allItemSizeNoEdge = t._allItemSize - (t._sizeType ? (t._topGap + t._bottomGap) : (t._leftGap + t._rightGap));\n        if (t.cyclic) {\n            let totalSize = (t._sizeType ? t.node.height : t.node.width);\n\n            t._cyclicPos1 = 0;\n            totalSize -= t._cyclicPos1;\n            t._cyclicNum = Math.ceil(totalSize / t._allItemSizeNoEdge) + 1;\n            let spacing = t._sizeType ? t._lineGap : t._columnGap;\n            t._cyclicPos2 = t._cyclicPos1 + t._allItemSizeNoEdge + spacing;\n            t._cyclicAllItemSize = t._allItemSize + (t._allItemSizeNoEdge * (t._cyclicNum - 1)) + (spacing * (t._cyclicNum - 1));\n            t._cycilcAllItemSizeNoEdge = t._allItemSizeNoEdge * t._cyclicNum;\n            t._cycilcAllItemSizeNoEdge += spacing * (t._cyclicNum - 1);\n            // cc.log('_cyclicNum ->', t._cyclicNum, t._allItemSizeNoEdge, t._allItemSize, t._cyclicPos1, t._cyclicPos2);\n        }\n\n        t._lack = !t.cyclic && t._allItemSize < (t._sizeType ? t.node.height : t.node.width);\n        let slideOffset = ((!t._lack || !t.lackCenter) && t.lackSlide) ? 0 : .1;\n        let targetWH = t._lack ? ((t._sizeType ? t.node.height : t.node.width) - slideOffset) : (t.cyclic ? t._cyclicAllItemSize : t._allItemSize);\n        if (targetWH < 0)\n            targetWH = 0;\n\n        if (t._sizeType) {\n            t.content.height = targetWH;\n        } else {\n            t.content.width = targetWH;\n        }\n        // cc.log('_resizeContent()  numItems =', t._numItems, '，content =', t.content);\n    },\n    //滚动进行时...\n    _onScrolling(ev) {\n        if (this.frameCount == null)\n            this.frameCount = this._updateRate;\n        if (!this._forceUpdate && (ev && ev.type != 'scroll-ended') && this.frameCount > 0) {\n            this.frameCount--;\n            return;\n        } else\n            this.frameCount = this._updateRate;\n\n        if (this._aniDelRuning)\n            return;\n\n        //循环列表处理\n        if (this.cyclic) {\n            let scrollPos = this.content.getPosition();\n            scrollPos = this._sizeType ? scrollPos.y : scrollPos.x;\n\n            let addVal = this._allItemSizeNoEdge + (this._sizeType ? this._lineGap : this._columnGap);\n            let add = this._sizeType ? cc.v2(0, addVal) : cc.v2(addVal, 0);\n\n            switch (this._alignCalcType) {\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                    if (scrollPos > -this._cyclicPos1) {\n                        this.content.x = -this._cyclicPos2;\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(add);\n                        }\n                        // if (this._beganPos) {\n                        //     this._beganPos += add;\n                        // }\n                    } else if (scrollPos < -this._cyclicPos2) {\n                        this.content.x = -this._cyclicPos1;\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(add);\n                        }\n                        // if (this._beganPos) {\n                        //     this._beganPos -= add;\n                        // }\n                    }\n                    break;\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                    if (scrollPos < this._cyclicPos1) {\n                        this.content.x = this._cyclicPos2;\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(add);\n                        }\n                    } else if (scrollPos > this._cyclicPos2) {\n                        this.content.x = this._cyclicPos1;\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(add);\n                        }\n                    }\n                    break;\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                    if (scrollPos < this._cyclicPos1) {\n                        this.content.y = this._cyclicPos2;\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(add);\n                        }\n                    } else if (scrollPos > this._cyclicPos2) {\n                        this.content.y = this._cyclicPos1;\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(add);\n                        }\n                    }\n                    break;\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                    if (scrollPos > -this._cyclicPos1) {\n                        this.content.y = -this._cyclicPos2;\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.sub(add);\n                        }\n                    } else if (scrollPos < -this._cyclicPos2) {\n                        this.content.y = -this._cyclicPos1;\n                        if (this._scrollView.isAutoScrolling()) {\n                            this._scrollView._autoScrollStartPosition = this._scrollView._autoScrollStartPosition.add(add);\n                        }\n                    }\n                    break;\n            }\n        }\n\n        this._calcViewPos();\n\n        // console.log('this.frameCount----->', this.frameCount, 'this._updateRate----->', this._updateRate, 'this._sizeType----->', this._sizeType);\n\n        let vTop, vRight, vBottom, vLeft;\n        if (this._sizeType) {\n            vTop = this.viewTop;\n            vBottom = this.viewBottom;\n            console.log('vTop======',vTop, 'vBottom======', vBottom);\n        } else {\n            vRight = this.viewRight;\n            vLeft = this.viewLeft;\n        }\n\n        if (this._virtual) {\n            this.displayData = [];\n            let itemPos;\n\n            let curId = 0;\n            let endId = this._numItems - 1;\n            if (this._customSize) {\n                let breakFor = false;\n                //如果该item的位置在可视区域内，就推入displayData\n                for (; curId <= endId && !breakFor; curId++) {\n                    itemPos = this._calcItemPos(curId);\n                    switch (this._align) {\n                        case cc.Layout.Type.HORIZONTAL:\n                            if (itemPos.right >= vLeft && itemPos.left <= vRight) {\n                                this.displayData.push(itemPos);\n                            } else if (curId != 0 && this.displayData.length > 0) {\n                                breakFor = true;\n                            }\n                            break;\n                        case cc.Layout.Type.VERTICAL:\n                            if (itemPos.bottom <= vTop && itemPos.top >= vBottom) {\n                                this.displayData.push(itemPos);\n                            } else if (curId != 0 && this.displayData.length > 0) {\n                                breakFor = true;\n                            }\n                            break;\n                        case cc.Layout.Type.GRID:\n                            switch (this._startAxis) {\n                                case cc.Layout.AxisDirection.HORIZONTAL:\n                                    if (itemPos.bottom <= vTop && itemPos.top >= vBottom) {\n                                        this.displayData.push(itemPos);\n                                    } else if (curId != 0 && this.displayData.length > 0) {\n                                        breakFor = true;\n                                    }\n                                    break;\n                                case cc.Layout.AxisDirection.VERTICAL:\n                                    if (itemPos.right >= vLeft && itemPos.left <= vRight) {\n                                        this.displayData.push(itemPos);\n                                    } else if (curId != 0 && this.displayData.length > 0) {\n                                        breakFor = true;\n                                    }\n                                    break;\n                            }\n                            break;\n                    }\n                }\n            } else {\n                let ww = this._itemSize.width + this._columnGap;\n                let hh = this._itemSize.height + this._lineGap;\n                switch (this._alignCalcType) {\n                    case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                        curId = (vLeft + this._leftGap) / ww;\n                        endId = (vRight + this._rightGap) / ww;\n                        break;\n                    case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                        curId = (-vRight - this._rightGap) / ww;\n                        endId = (-vLeft - this._leftGap) / ww;\n                        break;\n                    case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                        curId = (-vTop - this._topGap) / hh;\n                        endId = (-vBottom - this._bottomGap) / hh;\n                        break;\n                    case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                        curId = (vBottom + this._bottomGap) / hh;\n                        endId = (vTop + this._topGap) / hh;\n                        break;\n                }\n                curId = Math.floor(curId) * this._colLineNum;\n                endId = Math.ceil(endId) * this._colLineNum;\n                // console.log('00000000000000', 'hh -->', hh);\n                // console.log('11111111111111', '-vTop ==>', -vTop, 'this._topGap ==>', this._topGap, 'curId ==>', curId);\n                // console.log('22222222222222', '-vBottom >>>', -vBottom, 'this._bottomGap >>>', this._bottomGap, 'endId >>>', endId);\n                endId--;\n                if (curId < 0)\n                    curId = 0;\n                if (endId >= this._numItems)\n                    endId = this._numItems - 1;\n                // cc.log(curId, endId);\n                for (; curId <= endId; curId++) {\n                    this.displayData.push(this._calcItemPos(curId));\n                    console.log('>>>>>>>>', this.displayData);\n                }\n            }\n            if (this.displayData.length <= 0 || !this._numItems) { //if none, delete all.\n                this._lastDisplayData = [];\n                this._delRedundantItem();\n                return;\n            }\n            this.firstListId = this.displayData[0].id;\n            this.displayItemNum = this.displayData.length;\n            let len = this._lastDisplayData.length;\n            //判断数据是否与当前相同，如果相同，return。\n            //因List的显示数据是有序的，所以只需要判断数组长度是否相等，以及头、尾两个元素是否相等即可。\n            if (this._forceUpdate ||\n                this.displayItemNum != len ||\n                this.firstListId != this._lastDisplayData[0] ||\n                this.displayData[this.displayItemNum - 1].id != this._lastDisplayData[len - 1]\n            ) {\n                this._lastDisplayData = [];\n                if (this.frameByFrameRenderNum > 0) { //逐帧渲染\n                    if (this._numItems > 0) {\n                        if (!this._updateDone) {\n                            this._doneAfterUpdate = true;\n                        } else {\n                            this._updateCounter = 0;\n                        }\n                        this._updateDone = false;\n                    } else {\n                        this._delRedundantItem();\n                        this._updateCounter = 0;\n                        this._updateDone = true;\n                    }\n                    // cc.log('List Display Data I::', this.displayData);\n                } else { //直接渲染\n                    // cc.log('List Display Data II::', this.displayData);\n                    for (let c = 0; c < this.displayItemNum; c++) {\n                        this._createOrUpdateItem(this.displayData[c]);\n                    }\n                    this._delRedundantItem();\n                    this._forceUpdate = false;\n                }\n            }\n            this._calcNearestItem();\n        }\n    },\n    //计算View位置\n    _calcViewPos() {\n        let scrollPos = this.content.getPosition();\n        switch (this._alignCalcType) {\n            case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                this.elasticLeft = scrollPos.x > 0 ? scrollPos.x : 0;\n                this.viewLeft = (scrollPos.x < 0 ? -scrollPos.x : 0) - this.elasticLeft;\n                this.viewRight = this.viewLeft + this.node.width;\n                this.elasticRight = this.viewRight > this.content.width ? Math.abs(this.viewRight - this.content.width) : 0;\n                this.viewRight += this.elasticRight;\n                // cc.log(this.elasticLeft, this.elasticRight, this.viewLeft, this.viewRight);\n                break;\n            case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                this.elasticRight = scrollPos.x < 0 ? -scrollPos.x : 0;\n                this.viewRight = (scrollPos.x > 0 ? -scrollPos.x : 0) + this.elasticRight;\n                this.viewLeft = this.viewRight - this.node.width;\n                this.elasticLeft = this.viewLeft < -this.content.width ? Math.abs(this.viewLeft + this.content.width) : 0;\n                this.viewLeft -= this.elasticLeft;\n                // cc.log(this.elasticLeft, this.elasticRight, this.viewLeft, this.viewRight);\n                break;\n            case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                this.elasticTop = scrollPos.y < 0 ? Math.abs(scrollPos.y) : 0;\n                this.viewTop = (scrollPos.y > 0 ? -scrollPos.y : 0) + this.elasticTop;\n                this.viewBottom = this.viewTop - this.node.height;\n                this.elasticBottom = this.viewBottom < -this.content.height ? Math.abs(this.viewBottom + this.content.height) : 0;\n                this.viewBottom += this.elasticBottom;\n                // cc.log(this.elasticTop, this.elasticBottom, this.viewTop, this.viewBottom);\n                console.log('计算当前显示位置', 'elasticTop====', this.elasticTop,  'viewTop====',this.viewTop, 'viewBottom====', this.viewBottom, 'elasticBottom====', this.elasticBottom);\n                break;\n            case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                this.elasticBottom = scrollPos.y > 0 ? Math.abs(scrollPos.y) : 0;\n                this.viewBottom = (scrollPos.y < 0 ? -scrollPos.y : 0) - this.elasticBottom;\n                this.viewTop = this.viewBottom + this.node.height;\n                this.elasticTop = this.viewTop > this.content.height ? Math.abs(this.viewTop - this.content.height) : 0;\n                this.viewTop -= this.elasticTop;\n                // cc.log(this.elasticTop, this.elasticBottom, this.viewTop, this.viewBottom);\n                break;\n        }\n    },\n    //计算位置 根据id\n    _calcItemPos(id) {\n        let width, height, top, bottom, left, right, itemX, itemY;\n        switch (this._align) {\n            case cc.Layout.Type.HORIZONTAL:\n                switch (this._horizontalDir) {\n                    case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT: {\n                        if (this._customSize) {\n                            let fixed = this._getFixedSize(id);\n                            left = this._leftGap + ((this._itemSize.width + this._columnGap) * (id - fixed.count)) + (fixed.val + (this._columnGap * fixed.count));\n                            let cs = this._customSize[id];\n                            width = (cs > 0 ? cs : this._itemSize.width);\n                        } else {\n                            left = this._leftGap + ((this._itemSize.width + this._columnGap) * id);\n                            width = this._itemSize.width;\n                        }\n                        right = left + width;\n                        if (this.lackCenter) {\n                            let offset = (this.content.width / 2) - (this._allItemSizeNoEdge / 2);\n                            left += offset;\n                            right += offset;\n                        }\n                        return {\n                            id: id,\n                            left: left,\n                            right: right,\n                            x: left + (this._itemTmp.anchorX * width),\n                            y: this._itemTmp.y,\n                        };\n                    }\n                    case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT: {\n                        if (this._customSize) {\n                            let fixed = this._getFixedSize(id);\n                            right = -this._rightGap - ((this._itemSize.width + this._columnGap) * (id - fixed.count)) - (fixed.val + (this._columnGap * fixed.count));\n                            let cs = this._customSize[id];\n                            width = (cs > 0 ? cs : this._itemSize.width);\n                        } else {\n                            right = -this._rightGap - ((this._itemSize.width + this._columnGap) * id);\n                            width = this._itemSize.width;\n                        }\n                        left = right - width;\n                        if (this.lackCenter) {\n                            let offset = (this.content.width / 2) - (this._allItemSizeNoEdge / 2);\n                            left -= offset;\n                            right -= offset;\n                        }\n                        return {\n                            id: id,\n                            right: right,\n                            left: left,\n                            x: left + (this._itemTmp.anchorX * width),\n                            y: this._itemTmp.y,\n                        };\n                    }\n                }\n                break;\n            case cc.Layout.Type.VERTICAL: {\n                switch (this._verticalDir) {\n                    case cc.Layout.VerticalDirection.TOP_TO_BOTTOM: {\n                        if (this._customSize) {\n                            let fixed = this._getFixedSize(id);\n                            top = -this._topGap - ((this._itemSize.height + this._lineGap) * (id - fixed.count)) - (fixed.val + (this._lineGap * fixed.count));\n                            let cs = this._customSize[id];\n                            height = (cs > 0 ? cs : this._itemSize.height);\n                            bottom = top - height;\n                        } else {\n                            top = -this._topGap - ((this._itemSize.height + this._lineGap) * id);\n                            height = this._itemSize.height;\n                        }\n                        bottom = top - height;\n                        if (this.lackCenter) {\n                            let offset = (this.content.height / 2) - (this._allItemSizeNoEdge / 2);\n                            top -= offset;\n                            bottom -= offset;\n                        }\n                        // cc.log({\n                        //     id: id,\n                        //     top: top,\n                        //     bottom: bottom,\n                        //     x: this._itemTmp.x,\n                        //     y: bottom + (this._itemTmp.anchorY * height),\n                        // });\n                        return {\n                            id: id,\n                            top: top,\n                            bottom: bottom,\n                            x: this._itemTmp.x,\n                            y: bottom + (this._itemTmp.anchorY * height),\n                        };\n                    }\n                    case cc.Layout.VerticalDirection.BOTTOM_TO_TOP: {\n                        if (this._customSize) {\n                            let fixed = this._getFixedSize(id);\n                            bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * (id - fixed.count)) + (fixed.val + (this._lineGap * fixed.count));\n                            let cs = this._customSize[id];\n                            height = (cs > 0 ? cs : this._itemSize.height);\n                        } else {\n                            bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * id);\n                            height = this._itemSize.height;\n                        }\n                        top = bottom + height;\n                        if (this.lackCenter) {\n                            let offset = (this.content.height / 2) - (this._allItemSizeNoEdge / 2);\n                            top += offset;\n                            bottom += offset;\n                        }\n                        return {\n                            id: id,\n                            top: top,\n                            bottom: bottom,\n                            x: this._itemTmp.x,\n                            y: bottom + (this._itemTmp.anchorY * height),\n                        };\n                        break;\n                    }\n                }\n            }\n            case cc.Layout.Type.GRID: {\n                let colLine = Math.floor(id / this._colLineNum);\n                switch (this._startAxis) {\n                    case cc.Layout.AxisDirection.HORIZONTAL: {\n                        switch (this._verticalDir) {\n                            case cc.Layout.VerticalDirection.TOP_TO_BOTTOM: {\n                                top = -this._topGap - ((this._itemSize.height + this._lineGap) * colLine);\n                                bottom = top - this._itemSize.height;\n                                itemY = bottom + (this._itemTmp.anchorY * this._itemSize.height);\n                                break;\n                            }\n                            case cc.Layout.VerticalDirection.BOTTOM_TO_TOP: {\n                                bottom = this._bottomGap + ((this._itemSize.height + this._lineGap) * colLine);\n                                top = bottom + this._itemSize.height;\n                                itemY = bottom + (this._itemTmp.anchorY * this._itemSize.height);\n                                break;\n                            }\n                        }\n                        itemX = this._leftGap + ((id % this._colLineNum) * (this._itemSize.width + this._columnGap));\n                        switch (this._horizontalDir) {\n                            case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT: {\n                                itemX += (this._itemTmp.anchorX * this._itemSize.width);\n                                itemX -= (this.content.anchorX * this.content.width);\n                                break;\n                            }\n                            case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT: {\n                                itemX += ((1 - this._itemTmp.anchorX) * this._itemSize.width);\n                                itemX -= ((1 - this.content.anchorX) * this.content.width);\n                                itemX *= -1;\n                                break;\n                            }\n                        }\n                        return {\n                            id: id,\n                            top: top,\n                            bottom: bottom,\n                            x: itemX,\n                            y: itemY,\n                        };\n                    }\n                    case cc.Layout.AxisDirection.VERTICAL: {\n                        switch (this._horizontalDir) {\n                            case cc.Layout.HorizontalDirection.LEFT_TO_RIGHT: {\n                                left = this._leftGap + ((this._itemSize.width + this._columnGap) * colLine);\n                                right = left + this._itemSize.width;\n                                itemX = left + (this._itemTmp.anchorX * this._itemSize.width);\n                                itemX -= (this.content.anchorX * this.content.width);\n                                break;\n                            }\n                            case cc.Layout.HorizontalDirection.RIGHT_TO_LEFT: {\n                                right = -this._rightGap - ((this._itemSize.width + this._columnGap) * colLine);\n                                left = right - this._itemSize.width;\n                                itemX = left + (this._itemTmp.anchorX * this._itemSize.width);\n                                itemX += ((1 - this.content.anchorX) * this.content.width);\n                                break;\n                            }\n                        }\n                        itemY = -this._topGap - ((id % this._colLineNum) * (this._itemSize.height + this._lineGap));\n                        switch (this._verticalDir) {\n                            case cc.Layout.VerticalDirection.TOP_TO_BOTTOM: {\n                                itemY -= ((1 - this._itemTmp.anchorY) * this._itemSize.height);\n                                itemY += ((1 - this.content.anchorY) * this.content.height);\n                                break;\n                            }\n                            case cc.Layout.VerticalDirection.BOTTOM_TO_TOP: {\n                                itemY -= ((this._itemTmp.anchorY) * this._itemSize.height);\n                                itemY += (this.content.anchorY * this.content.height);\n                                itemY *= -1;\n                                break;\n                            }\n                        }\n                        return {\n                            id: id,\n                            left: left,\n                            right: right,\n                            x: itemX,\n                            y: itemY,\n                        };\n                    }\n                }\n                break;\n            }\n        }\n    },\n    //计算已存在的Item的位置\n    _calcExistItemPos(id) {\n        let item = this.getItemByListId(id);\n        if (!item)\n            return null;\n        let data = {\n            id: id,\n            x: item.x,\n            y: item.y,\n        }\n        if (this._sizeType) {\n            data.top = item.y + (item.height * (1 - item.anchorY));\n            data.bottom = item.y - (item.height * item.anchorY);\n        } else {\n            data.left = item.x - (item.width * item.anchorX);\n            data.right = item.x + (item.width * (1 - item.anchorX));\n        }\n        return data;\n    },\n    //获取Item位置\n    getItemPos(id) {\n        if (this._virtual)\n            return this._calcItemPos(id);\n        else {\n            if (this.frameByFrameRenderNum)\n                return this._calcItemPos(id);\n            else\n                return this._calcExistItemPos(id);\n        }\n    },\n    //获取固定尺寸\n    _getFixedSize(listId) {\n        if (!this._customSize)\n            return null;\n        if (listId == null)\n            listId = this._numItems;\n        let fixed = 0;\n        let count = 0;\n        for (let id in this._customSize) {\n            if (parseInt(id) < listId) {\n                fixed += this._customSize[id];\n                count++;\n            }\n        }\n        return {\n            val: fixed,\n            count: count,\n        }\n    },\n    //滚动开始时..\n    _onScrollBegan() {\n        this._beganPos = this._sizeType ? this.viewTop : this.viewLeft;\n    },\n    //滚动结束时..\n    _onScrollEnded() {\n        let t = this;\n        if (t.scrollToListId != null) {\n            let item = t.getItemByListId(t.scrollToListId);\n            t.scrollToListId = null;\n            if (item) {\n                item.runAction(new cc.sequence(\n                    new cc.scaleTo(.1, 1.06),\n                    new cc.scaleTo(.1, 1),\n                    //new cc.callFunc(function (runNode) {\n\n                    // })\n                ));\n            }\n        }\n        t._onScrolling();\n\n        if (t._slideMode == SlideType.ADHERING &&\n            !t.adhering\n        ) {\n            //cc.log(t.adhering, t._scrollView.isAutoScrolling(), t._scrollView.isScrolling());\n            t.adhere();\n        } else if (t._slideMode == SlideType.PAGE) {\n            if (t._beganPos != null) {\n                this._pageAdhere();\n            } else {\n                t.adhere();\n            }\n        }\n    },\n    // 触摸时\n    _onTouchStart(ev, captureListeners) {\n        if (this._scrollView._hasNestedViewGroup(ev, captureListeners))\n            return;\n        let isMe = ev.eventPhase === cc.Event.AT_TARGET && ev.target === this.node;\n        if (!isMe) {\n            let itemNode = ev.target;\n            while (itemNode._listId == null && itemNode.parent)\n                itemNode = itemNode.parent;\n            this._scrollItem = itemNode._listId != null ? itemNode : ev.target;;\n        }\n    },\n    //触摸抬起时..\n    _onTouchUp() {\n        let t = this;\n        t._scrollPos = null;\n        if (t._slideMode == SlideType.ADHERING) {\n            if (t.adhering)\n                t._adheringBarrier = true;\n            t.adhere();\n        } else if (t._slideMode == SlideType.PAGE) {\n            if (t._beganPos != null) {\n                t._pageAdhere();\n            } else {\n                t.adhere();\n            }\n        }\n        this._scrollItem = null;\n    },\n\n    _onTouchCancelled(ev, captureListeners) {\n        let t = this;\n        if (t._scrollView._hasNestedViewGroup(ev, captureListeners) || ev.simulate)\n            return;\n\n        t._scrollPos = null;\n        if (t._slideMode == SlideType.ADHERING) {\n            if (t.adhering)\n                t._adheringBarrier = true;\n            t.adhere();\n        } else if (t._slideMode == SlideType.PAGE) {\n            if (t._beganPos != null) {\n                t._pageAdhere();\n            } else {\n                t.adhere();\n            }\n        }\n        this._scrollItem = null;\n    },\n    //当尺寸改变\n    _onSizeChanged() {\n        if (this.checkInited(false))\n            this._onScrolling();\n    },\n    //当Item自适应\n    _onItemAdaptive(item) {\n        if (this.checkInited(false)) {\n            if (\n                (!this._sizeType && item.width != this._itemSize.width)\n                || (this._sizeType && item.height != this._itemSize.height)\n            ) {\n                if (!this._customSize)\n                    this._customSize = {};\n                let val = this._sizeType ? item.height : item.width;\n                if (this._customSize[item._listId] != val) {\n                    this._customSize[item._listId] = val;\n                    this._resizeContent();\n                    this.content.children.forEach(child => {\n                        this._updateItemPos(child);\n                    });\n                    // 如果当前正在运行 scrollTo，肯定会不准确，在这里做修正\n                    if (!isNaN(this._scrollToListId)) {\n                        this._scrollPos = null;\n                        this.unschedule(this._scrollToSo);\n                        this.scrollTo(this._scrollToListId, Math.max(0, this._scrollToEndTime - ((new Date()).getTime() / 1000)));\n                    }\n                }\n            }\n        }\n    },\n    //PAGE粘附\n    _pageAdhere() {\n        let t = this;\n        if (!t.cyclic && (t.elasticTop > 0 || t.elasticRight > 0 || t.elasticBottom > 0 || t.elasticLeft > 0))\n            return;\n        let curPos = t._sizeType ? t.viewTop : t.viewLeft;\n        let dis = (t._sizeType ? t.node.height : t.node.width) * t.pageDistance;\n        let canSkip = Math.abs(t._beganPos - curPos) > dis;\n        if (canSkip) {\n            let timeInSecond = .5;\n            switch (t._alignCalcType) {\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                    if (t._beganPos > curPos) {\n                        t.prePage(timeInSecond);\n                        // cc.log('_pageAdhere   PPPPPPPPPPPPPPP');\n                    } else {\n                        t.nextPage(timeInSecond);\n                        // cc.log('_pageAdhere   NNNNNNNNNNNNNNN')\n                    }\n                    break;\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                    if (t._beganPos < curPos) {\n                        t.prePage(timeInSecond);\n                    } else {\n                        t.nextPage(timeInSecond);\n                    }\n                    break;\n            }\n        } else if (t.elasticTop <= 0 && t.elasticRight <= 0 && t.elasticBottom <= 0 && t.elasticLeft <= 0) {\n            t.adhere();\n        }\n        t._beganPos = null;\n    },\n    //粘附\n    adhere() {\n        let t = this;\n        if (!t.checkInited())\n            return;\n        if (t.elasticTop > 0 || t.elasticRight > 0 || t.elasticBottom > 0 || t.elasticLeft > 0)\n            return;\n        t.adhering = true;\n        // if (!t._virtual)\n        t._calcNearestItem();\n        let offset = (t._sizeType ? t._topGap : t._leftGap) / (t._sizeType ? t.node.height : t.node.width);\n        let timeInSecond = .7;\n        t.scrollTo(t.nearestListId, timeInSecond, offset);\n    },\n    //Update..\n    update() {\n        if (this.frameByFrameRenderNum <= 0 || this._updateDone)\n            return;\n        // cc.log(this.displayData.length, this._updateCounter, this.displayData[this._updateCounter]);\n        if (this._virtual) {\n            let len = (this._updateCounter + this.frameByFrameRenderNum) > this.displayItemNum ? this.displayItemNum : (this._updateCounter + this.frameByFrameRenderNum);\n            for (let n = this._updateCounter; n < len; n++) {\n                let data = this.displayData[n];\n                if (data)\n                    this._createOrUpdateItem(data);\n            }\n\n            if (this._updateCounter >= this.displayItemNum - 1) { //最后一个\n                if (this._doneAfterUpdate) {\n                    this._updateCounter = 0;\n                    this._updateDone = false;\n                    if (!this._scrollView.isScrolling())\n                        this._doneAfterUpdate = false;\n                } else {\n                    this._updateDone = true;\n                    this._delRedundantItem();\n                    this._forceUpdate = false;\n                    this._calcNearestItem();\n                    if (this.slideMode == SlideType.PAGE)\n                        this.curPageNum = this.nearestListId;\n                }\n            } else {\n                this._updateCounter += this.frameByFrameRenderNum;\n            }\n        } else {\n            if (this._updateCounter < this._numItems) {\n                let len = (this._updateCounter + this.frameByFrameRenderNum) > this._numItems ? this._numItems : (this._updateCounter + this.frameByFrameRenderNum);\n                for (let n = this._updateCounter; n < len; n++) {\n                    this._createOrUpdateItem2(n);\n                }\n                this._updateCounter += this.frameByFrameRenderNum;\n            } else {\n                this._updateDone = true;\n                this._calcNearestItem();\n                if (this.slideMode == SlideType.PAGE)\n                    this.curPageNum = this.nearestListId;\n            }\n        }\n    },\n    /**\n     * 创建或更新Item（虚拟列表用）\n     * @param {Object} data 数据\n     */\n    _createOrUpdateItem(data) {\n        let item = this.getItemByListId(data.id);\n        if (!item) { //如果不存在\n            let canGet = this._pool.size() > 0;\n            if (canGet) {\n                item = this._pool.get();\n                // cc.log('从池中取出::   旧id =', item._listId, '，新id =', data.id, item);\n            } else {\n                item = cc.instantiate(this._itemTmp);\n                // cc.log('新建::', data.id, item);\n            }\n            if (item._listId != data.id) {\n                item._listId = data.id;\n                item.setContentSize(this._itemSize);\n            }\n            item.setPosition(new cc.v2(data.x, data.y));\n            this._resetItemSize(item);\n            this.content.addChild(item);\n            if (canGet && this._needUpdateWidget) {\n                let widget = item.getComponent(cc.Widget);\n                if (widget)\n                    widget.updateAlignment();\n            }\n            item.setSiblingIndex(this.content.childrenCount - 1);\n\n            let listItem = item.getComponent(ListItem);\n            item.listItem = listItem;\n            if (listItem) {\n                listItem._list = this;\n                listItem._registerEvent();\n            }\n            if (this.renderEvent) {\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, data.id % this._actualNumItems);\n            }\n        } else if (this._forceUpdate && this.renderEvent) { //强制更新\n            item.setPosition(new cc.v2(data.x, data.y));\n            this._resetItemSize(item);\n            // cc.log('ADD::', data.id, item);\n            if (this.renderEvent) {\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, data.id % this._actualNumItems);\n            }\n        }\n        this._resetItemSize(item);\n\n        this._updateListItem(item.listItem);\n        if (this._lastDisplayData.indexOf(data.id) < 0) {\n            this._lastDisplayData.push(data.id);\n        }\n    },\n    //创建或更新Item（非虚拟列表用）\n    _createOrUpdateItem2(listId) {\n        let item = this.content.children[listId];\n        if (!item) { //如果不存在\n            item = cc.instantiate(this._itemTmp);\n            item._listId = listId;\n            this.content.addChild(item);\n            let listItem = item.getComponent(ListItem);\n            item.listItem = listItem;\n            if (listItem) {\n                listItem._list = this;\n                listItem._registerEvent();\n            }\n            if (this.renderEvent) {\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, listId);\n            }\n        } else if (this._forceUpdate && this.renderEvent) { //强制更新\n            item._listId = listId;\n            if (this.renderEvent) {\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, listId);\n            }\n        }\n        this._updateListItem(item.listItem);\n        if (this._lastDisplayData.indexOf(listId) < 0) {\n            this._lastDisplayData.push(listId);\n        }\n    },\n\n    _updateListItem(listItem) {\n        if (!listItem)\n            return;\n        if (this.selectedMode > SelectedType.NONE) {\n            switch (this.selectedMode) {\n                case SelectedType.SINGLE:\n                    listItem.selected = this.selectedId == listItem.node._listId;\n                    break;\n                case SelectedType.MULT:\n                    listItem.selected = this.multSelected.indexOf(listItem.node._listId) >= 0;\n                    break;\n            }\n        }\n    },\n    //仅虚拟列表用\n    _resetItemSize(item) {\n        return;\n        let size;\n        if (this._customSize && this._customSize[item._listId]) {\n            size = this._customSize[item._listId];\n        } else {\n            if (this._colLineNum > 1)\n                item.setContentSize(this._itemSize);\n            else\n                size = this._sizeType ? this._itemSize.height : this._itemSize.width;\n        }\n        if (size) {\n            if (this._sizeType)\n                item.height = size;\n            else\n                item.width = size;\n        }\n    },\n    /**\n     * 更新Item位置\n     * @param {Number||Node} listIdOrItem\n     */\n    _updateItemPos(listIdOrItem) {\n        let item = isNaN(listIdOrItem) ? listIdOrItem : this.getItemByListId(listIdOrItem);\n        let pos = this.getItemPos(item._listId);\n        item.setPosition(pos.x, pos.y);\n    },\n    /**\n     * 设置多选\n     * @param {Array} args 可以是单个listId，也可是个listId数组\n     * @param {Boolean} bool 值，如果为null的话，则直接用args覆盖\n     */\n    setMultSelected(args, bool) {\n        let t = this;\n        if (!t.checkInited())\n            return;\n        if (!Array.isArray(args)) {\n            args = [args];\n        }\n        if (bool == null) {\n            t.multSelected = args;\n        } else {\n            let listId, sub;\n            if (bool) {\n                for (let n = args.length - 1; n >= 0; n--) {\n                    listId = args[n];\n                    sub = t.multSelected.indexOf(listId);\n                    if (sub < 0) {\n                        t.multSelected.push(listId);\n                    }\n                }\n            } else {\n                for (let n = args.length - 1; n >= 0; n--) {\n                    listId = args[n];\n                    sub = t.multSelected.indexOf(listId);\n                    if (sub >= 0) {\n                        t.multSelected.splice(sub, 1);\n                    }\n                }\n            }\n        }\n        t._forceUpdate = true;\n        t._onScrolling();\n    },\n    /**\n     * 更新指定的Item\n     * @param {Array} args 单个listId，或者数组\n     * @returns\n     */\n    updateItem(args) {\n        if (!this.checkInited())\n            return;\n        if (!Array.isArray(args)) {\n            args = [args];\n        }\n        for (let n = 0, len = args.length; n < len; n++) {\n            let listId = args[n];\n            let item = this.getItemByListId(listId);\n            if (item) {\n                cc.Component.EventHandler.emitEvents([this.renderEvent], item, listId % this._actualNumItems);\n            }\n        }\n    },\n    /**\n     * 更新全部\n     */\n    updateAll() {\n        if (!this.checkInited())\n            return;\n        this.numItems = this.numItems;\n    },\n    /**\n     * 根据ListID获取Item\n     * @param {Number} listId\n     * @returns\n     */\n    getItemByListId(listId) {\n        for (let n = this.content.childrenCount - 1; n >= 0; n--) {\n            if (this.content.children[n]._listId == listId)\n                return this.content.children[n];\n        }\n    },\n    /**\n     * 获取在显示区域外的Item\n     * @returns\n     */\n    _getOutsideItem() {\n        let item, isOutside;\n        let result = [];\n        for (let n = this.content.childrenCount - 1; n >= 0; n--) {\n            item = this.content.children[n];\n            isOutside = true;\n            if (isOutside) {\n                for (let c = this.displayItemNum - 1; c >= 0; c--) {\n                    if (!this.displayData[c])\n                        continue;\n                    let listId = this.displayData[c].id;\n                    if (item._listId == listId) {\n                        isOutside = false;\n                        break;\n                    }\n                }\n            }\n            if (isOutside) {\n                result.push(item);\n            }\n        }\n        return result;\n    },\n    //删除显示区域以外的Item\n    _delRedundantItem() {\n        if (this._virtual) {\n            let arr = this._getOutsideItem();\n            for (let n = arr.length - 1; n >= 0; n--) {\n                let item = arr[n];\n                if (this._scrollItem && item._listId == this._scrollItem._listId)\n                    continue;\n                this._pool.put(item);\n            }\n            // cc.log('存入::', str, '    pool.length =', this._pool.length);\n        } else {\n            while (this.content.childrenCount > this._numItems) {\n                this._delSingleItem(this.content.children[this.content.childrenCount - 1]);\n            }\n        }\n    },\n    //删除单个Item\n    _delSingleItem(item) {\n        // cc.log('DEL::', item._listId, item);\n        item.removeFromParent();\n        if (item.destroy)\n            item.destroy();\n        item = null;\n    },\n    /**\n     * 动效删除Item（此方法只适用于虚拟列表，即_virtual=true）\n     * 一定要在回调函数里重新设置新的numItems进行刷新，毕竟本List是靠数据驱动的。\n     */\n    aniDelItem(listId, callFunc, aniType) {\n        let t = this;\n\n        if (!t.checkInited() || t.cyclic || !t._virtual)\n            return cc.error('This function is not allowed to be called!');\n\n        if (t._aniDelRuning)\n            return cc.warn('Please wait for the current deletion to finish!');\n\n        let item = t.getItemByListId(listId);\n        if (!item) {\n            callFunc(listId);\n            return;\n        }\n        t._aniDelRuning = true;\n        let curLastId = t.displayData[t.displayData.length - 1].id;\n        let resetSelectedId = item.listItem.selected;\n        item.listItem.showAni(aniType, () => {\n            //判断有没有下一个，如果有的话，创建粗来\n            let newId;\n            if (curLastId < t._numItems - 2) {\n                newId = curLastId + 1;\n            }\n            if (newId != null) {\n                let newData = t._calcItemPos(newId);\n                t.displayData.push(newData);\n                if (t._virtual)\n                    t._createOrUpdateItem(newData);\n                else\n                    t._createOrUpdateItem2(newId);\n            } else\n                t._numItems--;\n            if (t.selectedMode == SelectedType.SINGLE) {\n                if (resetSelectedId) {\n                    t._selectedId = -1;\n                } else if (t._selectedId - 1 >= 0) {\n                    t._selectedId--;\n                }\n            } else if (t.selectedMode == SelectedType.MULT && t.multSelected.length) {\n                let sub = t.multSelected.indexOf(listId);\n                // let tmp;\n                if (sub >= 0) {\n                    t.multSelected.splice(sub, 1);\n                }\n                //多选的数据，在其后的全部减一\n                for (let n = t.multSelected.length - 1; n >= 0; n--) {\n                    let id = t.multSelected[n];\n                    if (id >= listId)\n                        t.multSelected[n]--;\n                }\n            }\n            if (t._customSize) {\n                if (t._customSize[listId])\n                    delete t._customSize[listId];\n                let newCustomSize = {};\n                let size;\n                for (let id in t._customSize) {\n                    size = t._customSize[id];\n                    id = parseInt(id);\n                    newCustomSize[id - (id >= listId ? 1 : 0)] = size;\n                }\n                t._customSize = newCustomSize;\n            }\n            //后面的Item向前怼的动效\n            let sec = .2333;\n            let acts, haveCB;\n            for (let n = newId != null ? newId : curLastId; n >= listId + 1; n--) {\n                item = t.getItemByListId(n);\n                if (item) {\n                    let posData = t._calcItemPos(n - 1);\n                    acts = [\n                        new cc.moveTo(sec, new cc.v2(posData.x, posData.y)),\n                    ];\n                    if (n <= listId + 1) {\n                        haveCB = true;\n                        acts.push(new cc.CallFunc(() => {\n                            t._aniDelRuning = false;\n                            callFunc(listId);\n                        }));\n                    }\n                    if (acts.length > 1)\n                        item.runAction(new cc.Sequence(acts));\n                    else\n                        item.runAction(acts[0]);\n                }\n            }\n            if (!haveCB) {\n                t._aniDelRuning = false;\n                callFunc(listId);\n            }\n        }, true);\n    },\n    /**\n     * 滚动到..\n     * @param {Number} listId 索引（如果<0，则滚到首个Item位置，如果>=_numItems，则滚到最末Item位置）\n     * @param {Number} timeInSecond 时间\n     * @param {Number} offset 索引目标位置偏移，0-1\n     * @param {Boolean} overStress 滚动后是否强调该Item（这只是个实验功能）\n     */\n    scrollTo(listId, timeInSecond, offset, overStress) {\n        let t = this;\n        if (!t.checkInited())\n            return;\n        t._scrollView.stopAutoScroll();\n        if (timeInSecond == null)   //默认0.5\n            timeInSecond = .5;\n        else if (timeInSecond < 0)\n            timeInSecond = 0;\n        if (listId < 0)\n            listId = 0;\n        else if (listId >= t._numItems)\n            listId = t._numItems - 1;\n        // 以防设置了numItems之后layout的尺寸还未更新\n        if (!t._virtual && t._layout && t._layout.enabled)\n            t._layout.updateLayout();\n\n        let pos = t.getItemPos(listId);\n        let targetX, targetY;\n\n        switch (t._alignCalcType) {\n            case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                targetX = pos.left;\n                if (offset != null)\n                    targetX -= t.node.width * offset;\n                else\n                    targetX -= t._leftGap;\n                pos = new cc.v2(targetX, 0);\n                break;\n            case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                targetX = pos.right - t.node.width;\n                if (offset != null)\n                    targetX += t.node.width * offset;\n                else\n                    targetX += t._rightGap;\n                pos = new cc.v2(targetX + t.content.width, 0);\n                break;\n            case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                targetY = pos.top;\n                if (offset != null)\n                    targetY += t.node.height * offset;\n                else\n                    targetY += t._topGap;\n                pos = new cc.v2(0, -targetY);\n                break;\n            case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                targetY = pos.bottom + t.node.height;\n                if (offset != null)\n                    targetY -= t.node.height * offset;\n                else\n                    targetY -= t._bottomGap;\n                pos = new cc.v2(0, -targetY + t.content.height);\n                break;\n        }\n        let viewPos = t.content.getPosition();\n        viewPos = Math.abs(t._sizeType ? viewPos.y : viewPos.x);\n\n        let comparePos = t._sizeType ? pos.y : pos.x;\n        let runScroll = Math.abs((t._scrollPos != null ? t._scrollPos : viewPos) - comparePos) > .5;\n        // cc.log(runScroll, t._scrollPos, viewPos, comparePos)\n\n        t._scrollView.stopAutoScroll();\n\n        if (runScroll) {\n            t._scrollPos = comparePos;\n            t._scrollToListId = listId;\n            t._scrollToEndTime = ((new Date()).getTime() / 1000) + timeInSecond;\n            t._scrollView.scrollToOffset(pos, timeInSecond);\n            // cc.log(listId, t.content.width, t.content.getPosition(), pos);\n            t._scrollToSo = t.scheduleOnce(() => {\n                if (!t._adheringBarrier) {\n                    t.adhering = t._adheringBarrier = false;\n                }\n                t._scrollPos =\n                    t._scrollToListId =\n                    t._scrollToEndTime =\n                    t._scrollToSo =\n                    null;\n                //cc.log('2222222222', t._adheringBarrier)\n                if (overStress) {\n                    // t.scrollToListId = listId;\n                    let item = t.getItemByListId(listId);\n                    if (item) {\n                        item.runAction(new cc.sequence(\n                            new cc.scaleTo(.1, 1.05),\n                            new cc.scaleTo(.1, 1),\n                        ));\n                    }\n                }\n            }, timeInSecond + .1);\n\n            if (timeInSecond <= 0) {\n                t._onScrolling();\n            }\n        }\n    },\n    /**\n     * 计算当前滚动窗最近的Item\n     */\n    _calcNearestItem() {\n        let t = this;\n        t.nearestListId = null;\n        let data, center;\n\n        if (t._virtual)\n            t._calcViewPos();\n\n        let vTop, vRight, vBottom, vLeft;\n        vTop = t.viewTop;\n        vRight = t.viewRight;\n        vBottom = t.viewBottom;\n        vLeft = t.viewLeft;\n\n        let breakFor = false;\n        for (let n = 0; n < t.content.childrenCount && !breakFor; n += t._colLineNum) {\n            data = this._virtual ? this.displayData[n] : this._calcExistItemPos(n);\n            center = this._sizeType ? ((data.top + data.bottom) / 2) : (center = (data.left + data.right) / 2);\n            switch (this._alignCalcType) {\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                    if (data.right >= vLeft) {\n                        this.nearestListId = data.id;\n                        if (vLeft > center)\n                            this.nearestListId += this._colLineNum;\n                        breakFor = true;\n                    }\n                    break;\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                    if (data.left <= vRight) {\n                        this.nearestListId = data.id;\n                        if (vRight < center)\n                            this.nearestListId += this._colLineNum;\n                        breakFor = true;\n                    }\n                    break;\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                    if (data.bottom <= vTop) {\n                        this.nearestListId = data.id;\n                        if (vTop < center)\n                            this.nearestListId += this._colLineNum;\n                        breakFor = true;\n                    }\n                    break;\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                    if (data.top >= vBottom) {\n                        this.nearestListId = data.id;\n                        if (vBottom > center)\n                            this.nearestListId += this._colLineNum;\n                        breakFor = true;\n                    }\n                    break;\n            }\n        }\n        //判断最后一个Item。。。（哎，这些判断真心恶心，判断了前面的还要判断最后一个。。。一开始呢，就只有一个布局（单列布局），那时候代码才三百行，后来就想着完善啊，艹..这坑真深，现在这行数都一千五了= =||）\n        data = this._virtual ? this.displayData[this.displayItemNum - 1] : this._calcExistItemPos(this._numItems - 1);\n        if (data && data.id == t._numItems - 1) {\n            center = t._sizeType ? ((data.top + data.bottom) / 2) : (center = (data.left + data.right) / 2);\n            switch (t._alignCalcType) {\n                case 1://单行HORIZONTAL（LEFT_TO_RIGHT）、网格VERTICAL（LEFT_TO_RIGHT）\n                    if (vRight > center)\n                        t.nearestListId = data.id;\n                    break;\n                case 2://单行HORIZONTAL（RIGHT_TO_LEFT）、网格VERTICAL（RIGHT_TO_LEFT）\n                    if (vLeft < center)\n                        t.nearestListId = data.id;\n                    break;\n                case 3://单列VERTICAL（TOP_TO_BOTTOM）、网格HORIZONTAL（TOP_TO_BOTTOM）\n                    if (vBottom < center)\n                        t.nearestListId = data.id;\n                    break;\n                case 4://单列VERTICAL（BOTTOM_TO_TOP）、网格HORIZONTAL（BOTTOM_TO_TOP）\n                    if (vTop > center)\n                        t.nearestListId = data.id;\n                    break;\n            }\n        }\n        // cc.log('t.nearestListId =', t.nearestListId);\n        // console.log('计算当前滚动窗最近的Item');\n    },\n    //上一页\n    prePage(timeInSecond) {\n        // cc.log('👈');\n        if (!this.checkInited())\n            return;\n        if (timeInSecond == null)\n            timeInSecond = .5;\n        this.skipPage(this.curPageNum - 1, timeInSecond);\n    },\n    //下一页\n    nextPage(timeInSecond) {\n        // cc.log('👉');\n        if (!this.checkInited())\n            return;\n        if (timeInSecond == null)\n            timeInSecond = .5;\n        this.skipPage(this.curPageNum + 1, timeInSecond);\n    },\n    //跳转到第几页\n    skipPage(pageNum, timeInSecond) {\n        let t = this;\n        if (!t.checkInited())\n            return;\n        if (t._slideMode != SlideType.PAGE)\n            return cc.error('This function is not allowed to be called, Must SlideMode = PAGE!');\n        if (pageNum < 0 || pageNum >= t._numItems)\n            return;\n        if (t.curPageNum == pageNum)\n            return;\n        // cc.log(pageNum);\n        t.curPageNum = pageNum;\n        if (t.pageChangeEvent) {\n            cc.Component.EventHandler.emitEvents([t.pageChangeEvent], pageNum);\n        }\n        t.scrollTo(pageNum, timeInSecond);\n    },\n    //计算 CustomSize（这个函数还是保留吧， ） \n    calcCustomSize(numItems) {\n        let t = this;\n        if (!t.checkInited())\n            return;\n        if (!t._itemTmp)\n            return cc.error('Unset template item!');\n        if (!t.renderEvent)\n            return cc.error('Unset Render-Event!');\n        t._customSize = {};\n        let temp = cc.instantiate(t._itemTmp);\n        t.content.addChild(temp);\n        for (let n = 0; n < numItems; n++) {\n            cc.Component.EventHandler.emitEvents([t.renderEvent], temp, n);\n            if (temp.height != t._itemSize.height || temp.width != t._itemSize.width) {\n                t._customSize[n] = t._sizeType ? temp.height : temp.width;\n            }\n        }\n        if (!Object.keys(t._customSize).length)\n            t._customSize = null;\n        temp.removeFromParent();\n        if (temp.destroy)\n            temp.destroy();\n        return t._customSize;\n    },\n\n});"]}